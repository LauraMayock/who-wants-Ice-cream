"""
Import gspread in order to update google spreadsheet
"""
import gspread
from google.oauth2.service_account import Credentials
from prettytable import PrettyTable
from datetime import datetime   # import for timestamp
import colorama  # import for font colour
from colorama import Fore, Style
import time,os,sys

#initialize colorama
colorama.init(autoreset=True)

SCOPE = [
    "https://www.googleapis.com/auth/spreadsheets",
    "https://www.googleapis.com/auth/drive.file",
    "https://www.googleapis.com/auth/drive"
    ]

CREDS = Credentials.from_service_account_file("CREDS.json")
SCOPED_CREDS = CREDS.with_scopes(SCOPE)
GSPREAD_CLIENT = gspread.authorize(SCOPED_CREDS)
SHEET = GSPREAD_CLIENT.open("Ice-creams")
receipt = SHEET.worksheet("receipt")
flavours = SHEET.worksheet("flavours")
flav_list = flavours.col_values(1)[1:]


order = SHEET.worksheet("receipt")

# create a list of the customers order
customer_order = []
price = 0
noScoops = 0
selected_flavour = []

# date and time generated for receipt generated by receipt function
now = datetime.now()
date = now.strftime("%c")

def type_print(text):
    """
    code taken from www.101computing.net
    """
    for shop in text:
        sys.stdout.write(shop)
        sys.stdout.flush()
        time.sleep(0.05)


def input_req(text):
    """
    code taken from www.101computing.net
    """
    for shop in text:
        sys.stdout.write(shop)
        sys.stdout.flush()
        time.sleep(0.05)
    value = input()
    return value


def clearScreen():
    os.system("clear")


def welcome():

    print("#██████╗██╗  ██╗███████╗   ██╗███╗   ██╗██████╗██╗██████╗ ██████╗")
    print("#╚═██╔═╝██║  ██║██╔════╝   ██║████╗  ██║██╔═══╝██║██╔══██╗██╔═══╝")
    print("#  ██║  ███████║█████╗     ██║██╔██╗ ██║██████╗██║██║  ██║█████╗")
    print("#  ██║  ██╔══██║██╔══╝     ██║██║╚██╗██║╚═══██║██║██║  ██║██╔══╝")
    print("#  ██║  ██║  ██║██████╗    ██║██║ ╚████║██████║██║██████╔╝██████╗")
    print("#  ╚═╝  ╚═╝  ╚═╝╚═════╝    ╚═╝╚═╝  ╚═══╝╚══════╝╚═╝╚═════╝ ╚════╝")
    print("#███████╗ ██████╗ ██████╗  ██████╗ ██████╗")
    print("#██╔════╝██╔════╝██╔═══██╗██╔═══██╗██╔══██╗")
    print("#███████╗██║     ██║   ██║██║   ██║██████╔╝")
    print("#╚════██║██║     ██║   ██║██║   ██║██╔═══╝")
    print("#███████║╚██████╗╚██████╔╝╚██████╔╝██║")
    print("#╚══════╝ ╚═════╝ ╚═════╝  ╚═════╝ ╚═╝")
    start_order()


def start_order():
    """
    Function to welcome the customer and ask if
    they would like to order.
    """
    type_print("Hi, Welcome to The Inside Scoop")
    type_print("\nWould you like to place an order?")
    question1 = input_req("\nPlease enter yes or no.")
    if question1.lower() == ("yes"):
        place_order()
    elif question1.lower() == ("no"):
        type_print("Ok, let me know when you have decided.")
        clearScreen()
        start_order()
    else:
        print(Fore.RED + "Sorry invalid entry.")
        print(Fore.RED + "Plese enter yes or no.")
        welcome()
        


def place_order():
    """
    Text goes here
    """
    choice = True
    while True:
        holder = input_req("What would you like a cup \
or a cone?").lower()
        if holder in ("cup", "cone"):
            number_scoops()
            break
        else:
            holder = input_req(Fore.RED + "incorrect input....\n\
Please select cup or cone").lower()


def number_scoops():
    """
    Text goes here.
    """
    global noScoops
    scoops = int(input_req("How many scoops? Enter 1, 2 or 3"))
    if scoops == 1:
        type_print("Ok, one scoop")
        customer_order.append("One scoop.")
        noScoops = 1
        flavour_choice()
    elif scoops == 2:
        type_print("Ok, two scoops it is.")
        customer_order.append("two scoops")
        noScoops = 2
        flavour_choice()
    elif scoops == 3:
        type_print("ok, Three scoops it is.")
        customer_order.append("Three scoops")
        noScoops = 3
        flavour_choice()
    else:
        type_print(Fore.RED + "Sorry invalid entry.")
        number_scoops()


def flavour_choice():
    """
    Text goes here.
    """
    type_print("what flavour would you like?")
    flavour_list = []
    for type in flav_list:
        flavour_list.append(type)
    num = []
    for i in range(1, 7):
        num.append(i)

    flavour_choice.type = dict(zip(num, flavour_list))

    type_table = PrettyTable()
    type_table.field_names = num
    type_table.add_row(flavour_list)
    print(type_table)


def iceCreamFlavours():
    """
    Text goes here
    """
    global selected_flavour
    while True:
        try:
            flv = list(input_req("what flavour would you like?"))
            flv.sort()
            selected_flavour = [int(i)for i in flv]
            if len(flv) > noScoops:
                type_print(Fore.RED + f"You have chosen {flv}. Thats too many.\
                     You wanted {noScoops} scoops.")
                continue
            if len(flv) < noScoops:
                type_print(Fore.RED + f"You havent chosen enough flavours.\
                     You said you wanted {noScoops}")
                continue
            if len(flv) == noScoops:
                type_print(f"you have chosen {selected_flavour}")
                customer_order.append(selected_flavour)
                break
        except ValueError:
            type_print(Fore.RED + "Please type a number between 1-6")
        clearScreen()

def sprinkles():
    """
    Text goes here.
    """
    global price
    if noScoops == 3:
        type_print("There is an offer on at the moment.\
Free sprinkles when you get 3 scoops")
        answer = input("yes/no")
        if answer.lower() == ("yes"):
            type_print("Added sprinkes")
            price = 4.00
            print_receipt()
            customer_order.append("Free sprinkles")
        elif answer.lower() == ("no"):
            type_print("Ok, no sprinkes")
        else:
            type_print(Fore.RED + "Sorry invalid entry.")
            type_print("Plese enter yes or no.")
    if noScoops < 3:
        question3 = input_req("Would you like sprinkles with that?\
It will be and extra 50c yes/no")
        if question3.lower() == ("yes"):
            type_print("Added sprinkles")
            if noScoops == 1:
                price = 2.5
                print_receipt()
            if noScoops == 2:
                price = 3.50
                print_receipt()
        elif question3.lower() == ("no"):
                print_receipt()
        else:
            type_print(Fore.RED + "Plese enter yes or no.")
            sprinkles()



def flavour_names():
    """
    Add text
    """
    flav_choice = []
    for x in selected_flavour:
        flav_choice.append(flav_list[x -1])
    print(flav_choice)


def print_receipt():
    """
    Print receipt
    """
    receipt_table = PrettyTable()
    receipt_table.add_row([f'Date: {date}'])
    receipt_table.add_row([f"Order: {customer_order} + {flav_choice}"])
    receipt_table.add_row([f"Total: €{price}"])
    print(receipt_table)

welcome()
start_order()
iceCreamFlavours()
sprinkles()
flavour_names()
